var storeifyValidate={},storeify_lang="",storeifyapps_filesizeval="MjU2MjA=",storeifyapps_maxcount="NQ==",storeify_formbuilder_html="",ify_fileExtensions="WyJqcGciLCJnaWYiLCJwbmciLCJqcGVnIiwidGlmZiIsInR4dCIsIm1wMyIsIm1wNCIsInppcCIsImRvYyIsImRvY3giLCJjc3YiLCJ4bHMiLCJ4bHN4IiwicHB0IiwicGRmIiwicHNkIiwic3ZnIiwiZXNwIiwiYWkiXQ==";(function(){var B64={alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",lookup:null,ie:/MSIE /.test(navigator.userAgent),ieo:/MSIE [67]/.test(navigator.userAgent),encode:function(a){var e,f,g,b=B64.toUtf8(a),c=-1,d=b.length,h=[,,];if(B64.ie){for(var i=[];++c<d;)e=b[c],f=b[++c],h[0]=e>>2,h[1]=(3&e)<<4|f>>4,isNaN(f)?h[2]=h[3]=64:(g=b[++c],h[2]=(15&f)<<2|g>>6,h[3]=isNaN(g)?64:63&g),i.push(B64.alphabet.charAt(h[0]),B64.alphabet.charAt(h[1]),B64.alphabet.charAt(h[2]),B64.alphabet.charAt(h[3]));return i.join("")}for(var i="";++c<d;)e=b[c],f=b[++c],h[0]=e>>2,h[1]=(3&e)<<4|f>>4,isNaN(f)?h[2]=h[3]=64:(g=b[++c],h[2]=(15&f)<<2|g>>6,h[3]=isNaN(g)?64:63&g),i+=B64.alphabet[h[0]]+B64.alphabet[h[1]]+B64.alphabet[h[2]]+B64.alphabet[h[3]];return i},decode:function(a){if(a.length%4)throw new Error("InvalidCharacterError: 'B64.decode' failed: The string to be decoded is not correctly encoded.");var b=B64.fromUtf8(a),c=0,d=b.length;if(B64.ieo){for(var e=[];d>c;)b[c]<128?e.push(String.fromCharCode(b[c++])):b[c]>191&&b[c]<224?e.push(String.fromCharCode((31&b[c++])<<6|63&b[c++])):e.push(String.fromCharCode((15&b[c++])<<12|(63&b[c++])<<6|63&b[c++]));return e.join("")}for(var e="";d>c;)e+=b[c]<128?String.fromCharCode(b[c++]):b[c]>191&&b[c]<224?String.fromCharCode((31&b[c++])<<6|63&b[c++]):String.fromCharCode((15&b[c++])<<12|(63&b[c++])<<6|63&b[c++]);return e},toUtf8:function(a){var d,b=-1,c=a.length,e=[];if(/^[\x00-\x7f]*$/.test(a))for(;++b<c;)e.push(a.charCodeAt(b));else for(;++b<c;)d=a.charCodeAt(b),128>d?e.push(d):2048>d?e.push(192|d>>6,128|63&d):e.push(224|d>>12,128|63&d>>6,128|63&d);return e},fromUtf8:function(a){var c,b=-1,d=[],e=[,,];if(!B64.lookup){for(c=B64.alphabet.length,B64.lookup={};++b<c;)B64.lookup[B64.alphabet.charAt(b)]=b;b=-1}for(c=a.length;++b<c&&(e[0]=B64.lookup[a.charAt(b)],e[1]=B64.lookup[a.charAt(++b)],d.push(e[0]<<2|e[1]>>4),e[2]=B64.lookup[a.charAt(++b)],e[2]!=64)&&(d.push((15&e[1])<<4|e[2]>>2),e[3]=B64.lookup[a.charAt(++b)],e[3]!=64);)d.push((3&e[2])<<6|e[3]);return d}},config_reponse=JSON.parse(B64.decode(storeify_formbuilder_html)),storeifyapps_max=parseInt(B64.decode(storeifyapps_maxcount)),storeifyapps_filesize=parseFloat(B64.decode(storeifyapps_filesizeval)),storeifyapps_fileextensions=JSON.parse(B64.decode(ify_fileExtensions)),replacer=function(finder,element,blackList){if(finder)for(var regex=typeof finder=="string"?new RegExp(finder,"g"):finder,regex2=new RegExp(finder,"g"),childNodes=element.childNodes,len=childNodes.length,list=typeof blackList>"u"?"html,head,style,title,link,meta,script,object,iframe,pre,a,":blackList;len--;){var node=childNodes[len];if((node.nodeType===1||list.indexOf(node.nodeName.toLowerCase())===-1)&&replacer(finder,node,list),node.nodeType!==3||!regex.test(node.data)){var sliderId=regex2.exec(node.data);if(sliderId){var innerHTML='<div class="storeify-formbuilder-view" id="storeify-formbuilder-view-'+sliderId[1]+'"></div>',str=node.data;str=str.replace("[storeify-formbuilder-"+sliderId[1]+"]",innerHTML);var node_child=document.createElement("span");node_child.innerHTML=str;var parent=node.parentNode;parent.insertBefore(node_child,node),parent.removeChild(node)}continue}for(var parent=node.parentNode,str=parent.innerHTML,array=[];(array1=regex2.exec(str))!==null;)array1[1]&&array.push(array1[1]);array.forEach(val=>{str=str.replace("[storeify-formbuilder-"+val+"]",'<div class="storeify-formbuilder-view" id="storeify-formbuilder-view-'+val+'"></div>')});var node_child=document.createElement("span");node_child.innerHTML=str,parent.innerHTML="",parent.appendChild(node_child)}},loadScript=function(url,callback){var script=document.createElement("script");script.type="text/javascript",script.readyState?script.onreadystatechange=function(){(script.readyState=="loaded"||script.readyState=="complete")&&(script.onreadystatechange=null,callback())}:script.onload=function(){callback()},script.src=url,document.getElementsByTagName("head")[0].appendChild(script)},storeifyappsJavaScript=function(jQuery2){jQuery2(document).ready(function(){var blackList;jQuery2("body").each(function(){replacer("\\[storeify-formbuilder-(\\d+)\\]",jQuery2(this).get(0),blackList)})});function jviewFormbuilder(id,type,html,upload,max,storeify_filezie,fileExt,step_enabled,text_buton){jQuery2(document).ready(function(){jQuery2('.storeify-formbuilder-button[data-target="#storeify-light-modal-'+id+'"]').show().addClass("btn-storeify-show"),type!=3?jQuery2("body").append(html):jQuery2("#storeify-formbuilder-view-"+id).html(html),step_enabled==1&&jQuery2("#storeify_body_step_"+id).steps({headerTag:".storeify-step",bodyTag:".storeify-frm-tab",transitionEffect:"slideLeft",autoFocus:!0,labels:{cancel:"Cancel",current:"current step:",pagination:"Pagination",finish:text_buton.submit_button,next:text_buton.next_button,previous:text_buton.previous_button,loading:"Loading ..."},titleTemplate:'<div class="storeify-dot dot-#index#"></div><span class="storeify-label">#title#</span>',onStepChanging:function(event,currentIndex,newIndex){return currentIndex>newIndex?!0:(currentIndex<newIndex&&(jQuery2("#storeify_form_action_"+id).find(".body:eq("+newIndex+") label.error").remove(),jQuery2("#storeify_form_action_"+id).find(".body:eq("+newIndex+") .error").removeClass("error")),jQuery2("#storeify_form_action_"+id).validate().settings.ignore=":disabled,:hidden",jQuery2("#storeify_form_action_"+id).valid())},onStepChanged:function(event,currentIndex,priorIndex){jQuery2("#storeify_form_action_"+id+" .steps ul li").removeClass("li-after"),jQuery2("#storeify_form_action_"+id+" .steps ul").find("li").each(function(i){var current=jQuery2(this);i>currentIndex&&current.addClass("li-after")})},onFinishing:function(event,currentIndex){return jQuery2("#storeify_form_action_"+id).validate().settings.ignore=":disabled,:hidden",jQuery2("#storeify_form_action_"+id).valid()},onFinished:function(event,currentIndex){jQuery2("#storeify_form_action_"+id).submit()}}),upload.upload==1&&uploadFile(id,upload.upload_label,upload.upload_url,max,storeify_filezie,fileExt)})}function uploadFile(id,label,url,max,storeify_filezie,fileExt){var $storeifyapps_files=jQuery2("#storeify_form_attach_file_"+id),storeify_time=new Date().getTime();$storeifyapps_files.fileinput({allowedFileExtensions:fileExt,uploadUrl:url,uploadAsync:!0,showPreview:!1,showCaption:!1,showCancel:!1,showRemove:!1,showUpload:!1,showRemove:!1,browseIcon:'<i class="fa fa-paperclip"> </i>',browseLabel:label,buttonLabelClass:"label-attach",browseClass:"btn-ctf-attach",removeLabel:"",removeClass:"btn btn-ctf-remove-attach form-control",uploadLabel:"",uploadClass:"btn btn-ctf-upload-attach form-control",msgInvalidFileExtension:'Only "{extensions}" files are supported.',overwriteInitial:!1,minFileCount:1,maxFileCount:max,maxFileSize:storeify_filezie,theme:"fa",initialPreviewAsData:!0,elErrorContainer:"#form_attach_file_error_"+id,uploadExtraData:function(){return{_token:jQuery2("#storeify_form_action_"+id+" input[name='_token']").val(),id,shopify_domain:config_reponse.shopify_domain}},slugCallback:function(filename2){return filename2=filename2.replace("(","_").replace("{","_").replace("}","_").replace("[","_").replace("]","_").replace(")","_").replace(" ","_").replace(",","_").split(),filename2=id+"_"+storeify_time+"_"+filename2,jQuery2("#storeify_attach_filename_temp_"+id).val(filename2),filename2}}).on("filebatchselected",function(event,files){jQuery2(event.target).fileinput("upload")}).on("filebatchpreupload",function(event,data,id2,index){var ele_id=data.extra.id;jQuery2("#storeify_content_formbuilder_"+ele_id).addClass("storeify-frm-loading"),jQuery2("#form_attach_file_success_"+ele_id).html("<ul></ul>").hide()}).on("fileuploaded",function(event,data,id2,index){var out="",ar_name=[],ar_label=[],ele_id=data.extra.id,fname=data.files[index].name;filename=fname.replace("(","_").replace("{","_").replace("}","_").replace("[","_").replace("]","_").replace(")","_").replace(" ","_").replace(",","_").split(),filename=ele_id+"_"+storeify_time+"_"+filename;var string_name=jQuery2("#storeify_form_attach_filename_"+ele_id).val()+","+filename,string_label=jQuery2("#form_attach_filelabel_"+ele_id).val()+","+fname;ar_name=string_name.split(","),ar_label=string_label.split(","),jQuery2.each(ar_name,function(key,value){value&&(out+='<li class="storeify-contact-img" data-label="'+ar_label[key]+'" data-name="'+value+'"><i class="fa fa-file-o"></i> Uploaded file '+ar_label[key]+' successfully. <i style="font-size:14px;color:red;cursor: pointer;" class="fa fa-times storeify-delete-file" aria-hidden="true" title="Remove"></i></li>')}),jQuery2("#form_attach_file_success_"+ele_id+" ul").html(out),jQuery2("#form_attach_file_success_"+ele_id).fadeIn("slow"),$storeifyapps_files.removeAttr("required"),jQuery2("#storeify_form_attach_filename_"+ele_id).val(string_name),jQuery2("#form_attach_filelabel_"+ele_id).val(string_label),jQuery2("#storeify_form_action_"+ele_id+" .kv-upload-progress").hide(),jQuery2("#storeify_content_formbuilder_"+ele_id).removeClass("storeify-frm-loading"),jQuery2("#storeify_form_attach_filename_"+ele_id+"-error").length&&jQuery2("#storeify_form_attach_filename_"+ele_id+"-error").remove(),jQuery2(".storeify-contact-img .storeify-delete-file").on("click",function(){var attach_submit=jQuery2("#storeify_form_attach_filename_"+ele_id).val(),label_file=jQuery2("#form_attach_filelabel_"+ele_id).val();jQuery2("#storeify_form_attach_filename_"+ele_id).val(attach_submit.replace(","+jQuery2(this).parent().data("name"),"")),jQuery2("#form_attach_filelabel_"+ele_id).val(label_file.replace(","+jQuery2(this).parent().data("name"),"")),jQuery2(this).parent().remove()})})}var metaShopify=window.meta||{},headerConfig=window.storeifyFormBuider||{},preMode=Shopify.designMode||!1,meta={};jQuery2.each(config_reponse.items,function(key,value){value.show_all==1||preMode==!0?jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton):(meta=metaShopify.page,headerConfig.page_type=="index"&&jQuery2.inArray("home-",value.pages)!=-1&&jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton),headerConfig.page_type=="product"&&typeof meta.resourceId<"u"&&jQuery2.inArray(meta.resourceId.toString(),value.products)!==-1&&jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton),headerConfig.page_type=="collection"&&(typeof meta.resourceId>"u"&&jQuery2.inArray("collections-",value.pages)!==-1&&jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton),typeof meta.resourceId<"u"&&jQuery2.inArray(meta.resourceId.toString(),value.collections)!==-1&&jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton)),headerConfig.page_type=="list-collections"&&typeof meta.resourceId>"u"&&jQuery2.inArray("catalog-",value.pages)!==-1&&jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton),headerConfig.page_type=="search"&&jQuery2.inArray("searchresult-",value.pages)!==-1&&jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton),headerConfig.page_type=="cart"&&jQuery2.inArray("cart-",value.pages)!==-1&&jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton),headerConfig.page_type.indexOf("customers")!=-1&&jQuery2.inArray("customers-",value.pages)!==-1&&jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton),headerConfig.page_type=="blog"&&jQuery2.inArray("blog-",value.pages)!==-1&&jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton),typeof meta.resourceId<"u"&&headerConfig.page_type=="page"&&jQuery2.inArray("page-"+meta.resourceId.toString(),value.pages)!=-1&&jviewFormbuilder(value.id,value.type,value.html,value.upload,storeifyapps_max,storeifyapps_filesize,storeifyapps_fileextensions,value.step_enabled,value.text_buton))}),jQuery2(document).ready(function(){jQuery2(document).on("click",".storeify-btn-trigger-popup,.storeify-formbuilder-button",function(e){e.preventDefault();var target=jQuery2(this).data("target"),form=jQuery2(target).find("form");form.css("visibility","visible"),form.next(".storeify-formbuilder-mes").hide(),form.find(".storeify-input-control").each(function(){jQuery2(this).hasClass("storeify-select")&&jQuery2(this).data("default")==""?jQuery2(this).find("option:eq(0)").prop("selected",!0):jQuery2(this).val(jQuery2(this).data("default"))}),form.find(".bg-success").html(""),form.find(".file-error-message").html(""),jQuery2(target).addClass("target")}),jQuery2(document).on("click",".storeify-formbuilder-button",function(e){e.preventDefault();var target=jQuery2(this).data("target");jQuery2(target).addClass("target")}),jQuery2(document).on("click",".storeify-frm-close",function(e){e.preventDefault();var target=jQuery2(this).parent().parent().parent();jQuery2(target).removeClass("target")});var storeify_lang_cf={autoclose:!0,ignoreReadonly:!0,format:"DD/MM/YYYY"};storeify_lang!==""&&(storeify_lang_cf={locale:storeify_lang,autoclose:!0,ignoreReadonly:!0,format:"DD/MM/YYYY"}),jQuery2(".datetimepicker-input").each(function(){storeify_lang_cf.format=jQuery2(this).data("format"),jQuery2(this).parent().datetimepicker(storeify_lang_cf)});function submitAjax(form){var pageType="";typeof meta.pageType>"u"?(window.location.pathname.indexOf("/cart")&&(pageType="cart"),window.location.pathname.indexOf("/acount")&&(pageType="acount")):pageType=meta.pageType+"-"+meta.resourceId,form.find(".submit_from").val(pageType),jQuery2.ajax({type:"POST",url:form.attr("action"),data:form.serialize(),async:!0,cache:!0,beforeSend:function(){form.parent().parent().addClass("storeify-frm-loading")},success:function(response){form.parent().parent().removeClass("storeify-frm-loading"),form.addClass("storeify-frm-sent"),form.css("visibility","hidden"),form.next(".storeify-formbuilder-mes").removeClass("storeify-mes-alert"),form.next(".storeify-formbuilder-mes").removeClass("storeify-mes-success"),form.next(".storeify-formbuilder-mes").html(response.mes),form.next(".storeify-formbuilder-mes").show();var appConfig=window.storeifyFrombuilder||{};if(typeof appConfig["frmCallback_"+response.data.id]=="function"){let callback=appConfig["frmCallback_"+response.data.id];callback(response.data)}response.status==0?form.next(".storeify-formbuilder-mes").addClass("storeify-mes-alert"):(form.next(".storeify-formbuilder-mes").addClass("storeify-mes-success"),response.thankyoupage_url&&jQuery2(location).attr("href",response.thankyoupage_url))}})}jQuery2(".storeify-form-action").each(function(){var id=jQuery2(this).find("input[name='id']").val(),validations={},rule={},mes={};jQuery2.validator.addMethod("email",function(value,element){return this.optional(element)||/^([a-zA-Z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+\/=?^_`{|}~-]+)*@(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?)$/i.test(value)},"Email Address is invalid: Please enter a valid email address."),typeof storeifyValidate<"u"&&(validations=storeifyValidate,typeof validations[id].rules<"u"&&(rule=validations[id].rules),typeof validations[id].mes<"u"&&jQuery2.each(validations[id].mes,function(key,value){var itemMes={};jQuery2.each(value,function(k,l){itemMes[k]=jQuery2.validator.format(l)}),mes[key]=itemMes})),jQuery2(this).validate({ignore:".storeify-hide .storeify-input-control,.storeify-hide input",rules:rule,messages:mes,submitHandler:function(form){submitAjax(jQuery2(form))}})})})};typeof jQuery>"u"||typeof jQuery.fn.on>"u"?loadScript("//code.jquery.com/jquery-3.4.1.min.js",function(){storeifyAPPS=jQuery.noConflict(!0),storeifyAPPS(document).ready(function(){storeifyappsJavaScript(storeifyAPPS)})}):storeifyappsJavaScript(jQuery)})();
//# sourceMappingURL=/cdn/shop/t/26/assets/storeifyapps-formbuilder-script.js.map?v=55883564122243748361680279165
